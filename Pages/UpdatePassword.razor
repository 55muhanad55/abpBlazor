@page "/Update-Password"

@inject NotificationService notificationService
@inject IUserService user
@using Models.User

<section class="content-header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-6">
                <h1>@c.l["UpdatePassword"]</h1>
            </div>
        </div>
    </div>
</section>
<section class="content px-2 loading">
    <div class="container-fluid">
        <div class="card">
            <RadzenCard Style="position: inherit">
                <EditForm Model="updatePasswordModel" OnValidSubmit="() => UpdatePasswordAsync()">
                    <DataAnnotationsValidator />



                    <div class="form-group row required">
                        <label for="name" class="col-md-3 col-form-label"> @c.l["CurrentPassword"] </label>
                        <div class="col-md-9">
                            <InputTextBox @bind-Value="updatePasswordModel.currentPassword" type="password" class="form-control " />
                            <ValidationMessage For="() => updatePasswordModel.currentPassword" />

                        </div>
                    </div>


                    <div class="form-group row required">
                        <label for="name" class="col-md-3 col-form-label"> @c.l["NewPassword"] </label>
                        <div class="col-md-9">
                            <InputTextBox @bind-Value="updatePasswordModel.newPassword" type="password" class="form-control " />
                            <ValidationMessage For="() => updatePasswordModel.newPassword" />

                        </div>
                    </div>

                    <div class="form-group row required">
                        <label for="name" class="col-md-3 col-form-label"> @c.l["ConfirmPassword"] </label>
                        <div class="col-md-9">
                            <InputTextBox @bind-Value="updatePasswordModel.confirmNewPassword" type="password" class="form-control " />
                            <ValidationMessage For="() => updatePasswordModel.confirmNewPassword" />


                        </div>
                    </div>

                    <br />
                    <div class="modal-footer justify-content-between">
                        <button type="submit" class="btn btn-primary">
                            @c.l["Save"]
                        </button>
                    </div>
                </EditForm>
                </RadzenCard>

        </div>
    </div>
</section>

@code {

    ChangePasswordModel updatePasswordModel = new ChangePasswordModel();


    async Task UpdatePasswordAsync()
    {
        ChangePasswordDto changePassword = new ChangePasswordDto {
        currentPassword = updatePasswordModel.currentPassword,
        newPassword = updatePasswordModel.newPassword
        };

        var response = await user.ChangePassword(changePassword);
        if (response.success)
        {
            notificationService.Notify(new NotificationMessage()
            {
                Severity = NotificationSeverity.Success,
                Summary = c.l["SavedSuccessfully"],
                Detail = "",
                Duration = 3000
            });
        }
        else
        {
            notificationService.Notify(new NotificationMessage()
            {
                Severity = NotificationSeverity.Error,
                Summary = response.error.message,
                Detail = response.error.details,
                Duration = 3000
            });
        }
    }

}
